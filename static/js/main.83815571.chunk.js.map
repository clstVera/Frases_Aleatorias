{"version":3,"sources":["styles/Styles.jsx","components/Quote.jsx","containers/App.jsx","index.js"],"names":["colors","MainContainer","styled","div","QuoteContainer","QuoteText","p","QuoteAuthor","QuoteButtons","QuoteButton","a","NewQuoteButton","Quote","props","handleClickQuote","changeQuote","randomQuote","Math","floor","random","state","quotes","length","setState","quote","color","loading","undefined","fetch","then","respQuotes","json","this","stylebg","backgroundColor","style","id","icon","faQuoteLeft","author","href","target","faTwitter","faTumblr","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gMAEIA,EAAS,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEC,EAAgBC,IAAOC,IAAV,4JAQbC,EAAiBF,IAAOC,IAAV,oMAUdE,EAAYH,IAAOI,EAAV,wDAITC,EAAcL,IAAOI,EAAV,6EAKXE,EAAeN,IAAOC,IAAV,gJAQZM,EAAcP,IAAOQ,EAAV,4UAkBXC,EAAiBT,IAAOC,IAAV,sG,6BC/DCS,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAkBVC,iBAAmB,WACf,EAAKC,eApBU,EAuBnBA,YAAc,WACV,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAW,EAAKC,MAAMC,OAAOC,QAElE,EAAKC,SAAS,CACVC,MAAO,EAAKJ,MAAMC,OAAOL,GACzBS,MAAOzB,EAAOiB,KAAKC,MAAMD,KAAKE,SAAWnB,EAAOsB,YA1BpD,EAAKF,MAAQ,CACTM,SAAS,EACTL,YAAQM,EACRH,MAAO,GACPC,WAAOE,GANI,E,qDAUnB,WAAqB,IAAD,OAChBC,MAAM,0IACDC,MAAK,SAAAC,GAAU,OAAIA,EAAWC,UAC9BF,MAAK,SAAAC,GACF,EAAKP,SAAS,CAAEF,OAAQS,EAAWT,OAAQK,SAAS,IACpD,EAAKX,mB,oBAiBjB,WACI,IAA2B,IAAvBiB,KAAKZ,MAAMM,UAAqBM,KAAKZ,MAAMC,OAC3C,OACI,6CAIR,IAAIY,EAAU,CAAEC,gBAAiBF,KAAKZ,MAAMK,OACxCU,EAAQ,CAAEV,MAAOO,KAAKZ,MAAMK,OAEhC,OACI,cAACxB,EAAD,CAAekC,MAAOF,EAAtB,SACI,eAAC7B,EAAD,CAAgBgC,GAAG,YAAnB,UACI,eAAC/B,EAAD,CAAW+B,GAAG,OAAOD,MAAOA,EAA5B,UACI,cAAC,IAAD,CAAiBE,KAAMC,MAD3B,IAC4CN,KAAKZ,MAAMI,MAAMA,SAE7D,eAACjB,EAAD,CAAa6B,GAAG,SAASD,MAAOA,EAAhC,eACOH,KAAKZ,MAAMI,MAAMe,UAExB,eAAC/B,EAAD,WACI,eAACC,EAAD,CAAa2B,GAAG,cAAcD,MAAOF,EAASO,KAAI,mDAA8CR,KAAKZ,MAAMI,MAAMA,MAA/D,YAAwEQ,KAAKZ,MAAMI,MAAMe,QAAUE,OAAO,SAA5J,UAAqK,cAAC,IAAD,CAAiBJ,KAAMK,MAA5L,OACA,cAACjC,EAAD,CAAa0B,MAAOF,EAASO,KAAI,mDAA8CR,KAAKZ,MAAMI,MAAMA,MAA/D,YAAwEQ,KAAKZ,MAAMI,MAAMe,QAAUE,OAAO,SAA3I,SAAoJ,cAAC,IAAD,CAAiBJ,KAAMM,QAC3K,cAAChC,EAAD,CAAgByB,GAAG,YAAYD,MAAOF,EAASW,QAASZ,KAAKlB,iBAA7D,mC,GAvDW+B,aCGpBC,EANH,WACR,OACI,cAAC,EAAD,K,MCDRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.83815571.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nvar colors = [\r\n    '#16a085',\r\n    '#27ae60',\r\n    '#2c3e50',\r\n    '#f39c12',\r\n    '#e74c3c',\r\n    '#9b59b6',\r\n    '#FB6964',\r\n    '#342224',\r\n    '#472E32',\r\n    '#BDBB99',\r\n    '#77B1A9',\r\n    '#73A857'\r\n];\r\n\r\nconst MainContainer = styled.div`\r\n    height: 100vh;\r\n    background-color: #16a085;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst QuoteContainer = styled.div`\r\n    border-radius: 3px;\r\n    width: 550px;\r\n    padding: 50px;\r\n    height: auto;\r\n    font-weight: 400;\r\n    background-color: #fff;\r\n    text-align: center;    \r\n    `\r\n\r\nconst QuoteText = styled.p`\r\n    font-size: 1.75em;\r\n    `\r\n\r\nconst QuoteAuthor = styled.p`\r\n    font-size: 1em;\r\n    text-align: right;\r\n    `\r\n\r\nconst QuoteButtons = styled.div`\r\n    height: 30px;\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    display: block;\r\n    box-sizing: content-box;\r\n    `\r\n\r\nconst QuoteButton = styled.a`\r\n    padding: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    border: none;\r\n    border-radius: 3px;\r\n    color: #fff;\r\n    background-color: #16a085;\r\n    font-size: 1.4em;     \r\n    opacity: 1;\r\n    cursor: pointer;\r\n    float: left;\r\n    margin-right: 5px;\r\n    :hover {\r\n        color: #fff;\r\n    }\r\n    `\r\n\r\nconst NewQuoteButton = styled.div`\r\npadding: 8px 18px;\r\nborder-radius: 3px;\r\ncolor: #fff;\r\nfloat: right;    \r\n`\r\nexport { colors, MainContainer, QuoteContainer, QuoteText, QuoteAuthor, QuoteButtons, QuoteButton, NewQuoteButton };\r\n","import React, { Component } from 'react'\r\nimport { colors, MainContainer, QuoteContainer, QuoteText, QuoteAuthor, QuoteButtons, QuoteButton, NewQuoteButton } from '../styles/Styles.jsx'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport { faTumblr } from '@fortawesome/free-brands-svg-icons'\r\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Quote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            quotes: undefined,\r\n            quote: {},\r\n            color: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\r\n            .then(respQuotes => respQuotes.json())\r\n            .then(respQuotes => {\r\n                this.setState({ quotes: respQuotes.quotes, loading: false })\r\n                this.changeQuote()\r\n            })\r\n    }\r\n\r\n    handleClickQuote = () => {\r\n        this.changeQuote()\r\n    }\r\n\r\n    changeQuote = () => {\r\n        const randomQuote = (Math.floor(Math.random() * this.state.quotes.length))\r\n\r\n        this.setState({\r\n            quote: this.state.quotes[randomQuote],\r\n            color: colors[Math.floor(Math.random() * colors.length)]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true && !this.state.quotes) {\r\n            return (\r\n                <h1>Cargando...</h1>\r\n            )\r\n        }\r\n\r\n        var stylebg = { backgroundColor: this.state.color };\r\n        var style = { color: this.state.color };\r\n\r\n        return (\r\n            <MainContainer style={stylebg}>\r\n                <QuoteContainer id=\"quote-box\">\r\n                    <QuoteText id=\"text\" style={style}>\r\n                        <FontAwesomeIcon icon={faQuoteLeft} /> {this.state.quote.quote}\r\n                    </QuoteText>\r\n                    <QuoteAuthor id=\"author\" style={style}>\r\n                        - {this.state.quote.author}\r\n                    </QuoteAuthor>\r\n                    <QuoteButtons>\r\n                        <QuoteButton id=\"tweet-quote\" style={stylebg} href={`http://twitter.com/intent/tweet?hashtags=${this.state.quote.quote} ${this.state.quote.author}`} target=\"_blank\"><FontAwesomeIcon icon={faTwitter} /> </QuoteButton>\r\n                        <QuoteButton style={stylebg} href={`https://www.tumblr.com/login?redirect_to=${this.state.quote.quote} ${this.state.quote.author}`} target=\"_blank\"><FontAwesomeIcon icon={faTumblr} /></QuoteButton>\r\n                        <NewQuoteButton id=\"new-quote\" style={stylebg} onClick={this.handleClickQuote}>New quote</NewQuoteButton>\r\n                    </QuoteButtons>\r\n                </QuoteContainer>\r\n            </MainContainer>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Quote from '../components/Quote'\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Quote />\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}